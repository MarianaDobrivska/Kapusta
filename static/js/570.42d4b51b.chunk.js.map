{"version":3,"file":"static/js/570.42d4b51b.chunk.js","mappings":"0JAEaA,E,QAAmBC,GAAAA,IAAH,0X,SCK7B,EAJmB,WACjB,OAAO,SAACD,EAAD,GACR,C,mICmED,I,kBACA,EAAe,IAA0B,2D,6BCvE5BE,EAAaD,EAAAA,GAAAA,IAAH,yjBAgCVE,GAPWF,EAAAA,GAAAA,EAAH,kHAODA,EAAAA,GAAAA,KAAH,2RAcJG,EAAaH,EAAAA,GAAAA,MAAH,oRAeVI,EAAaJ,EAAAA,GAAAA,MAAH,8QAYVK,EAAgBL,EAAAA,GAAAA,IAAH,6EAMbM,EAAWN,EAAAA,GAAAA,OAAH,ujBAsBRO,EAAYP,EAAAA,GAAAA,EAAH,0WAgBTQ,EAAYR,EAAAA,GAAAA,KAAH,yH,SCTtB,EA7FkB,WAChB,IAAMS,GAAWC,EAAAA,EAAAA,MACXC,EAAUC,IAAAA,WACVC,EAAcD,IAAAA,WACpB,OACE,UAACX,EAAD,YACE,qEACA,SAACM,EAAD,CACEO,KAAK,SACLC,KAAK,kDAFP,UAIE,gBAAKC,IAAKC,EAAQC,IAAI,cAExB,sFACA,SAAC,KAAD,CACEC,cAAe,CAAEC,MAAO,GAAIC,SAAU,IACtCC,SAAU,SAAAC,GACR,IAAMC,EAAS,CAAC,EAWhB,OAVKD,EAAOH,MAGT,2CAA2CK,KAAKF,EAAOH,SAExDI,EAAOJ,MAAQ,yBAJfI,EAAOJ,MAAQ,2BAMZG,EAAOF,WACVG,EAAOH,SAAW,4BAEbG,CACR,EACDE,SAAU,SAAAH,GACRd,GAASkB,EAAAA,EAAAA,IAAMJ,GAChB,EAlBH,SAoBG,gBACCA,EADD,EACCA,OACAC,EAFD,EAECA,OACAI,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,UAAC9B,EAAD,CAAMwB,SAAUK,EAAhB,WACE,SAAC5B,EAAD,CAAY8B,QAAStB,EAArB,qBACA,SAACP,EAAD,CACEU,KAAK,QACLoB,KAAK,QACLC,SAAUN,EACVO,OAAQN,EACRO,MAAOd,EAAOH,MACdkB,GAAI3B,EACJ4B,YAAY,oBAEd,SAAC/B,EAAD,UACGgB,EAAOJ,OAASQ,EAAQR,OAASI,EAAOJ,SAE3C,SAACjB,EAAD,CAAY8B,QAASpB,EAArB,wBACA,SAACT,EAAD,CACEU,KAAK,WACLoB,KAAK,WACLC,SAAUN,EACVO,OAAQN,EACRO,MAAOd,EAAOF,SACdiB,GAAIzB,EACJ0B,YAAY,8BACZC,QAAQ,2FAEV,SAAChC,EAAD,UACGgB,EAAOH,UAAYO,EAAQP,UAAYG,EAAOH,YAGjD,UAAChB,EAAD,YACE,SAACC,EAAD,CAAUQ,KAAK,SAAS2B,SAAUT,EAAlC,SACG,SAASU,iBAEZ,SAACpC,EAAD,CACEQ,KAAK,SACL2B,SAAUT,EACVW,QAAS,WACPlC,GAASmC,EAAAA,EAAAA,IAAOrB,GACjB,EALH,SAOG,eAAemB,qBAjDvB,MAyDR,ECtED,IACA,EAAe,IAA0B,mECDzC,IACA,EAAe,IAA0B,mECSzC,I,IACA,EAAe,IAA0B,oE,uCC3C5BG,EAAiB7C,EAAAA,GAAAA,IAAH,6/BAcC8C,EAAgBC,EAQdC,EAAiBC,GAelCC,EAAiBlD,EAAAA,GAAAA,IAAH,0C,UCnCZ,SAASmD,IACtB,OAA0CC,EAAAA,EAAAA,KAAlCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,SAC7B,OACE,iCACE,SAACC,EAAA,EAAD,KACA,UAACX,EAAD,WACGQ,IACC,SAACH,EAAD,WACE,gBACElC,IAAKyC,EACLvC,IAAI,OACJwC,UAAS,4CAIdH,IACC,SAACL,EAAD,WACE,gBACElC,IAAK2C,EACLzC,IAAI,OACJwC,UAAS,4CAIdJ,IACC,SAACJ,EAAD,WACE,gBACElC,IAAK4C,EACL1C,IAAI,OACJwC,UAAS,6CAIf,SAAC,EAAD,SAIP,C","sources":["components/Background/Background.styled.jsx","components/Background/Background.jsx","images/google.svg","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","images/Kapu$ta_mobile.svg","images/Kapu$ta_tablet.svg","images/Kapu$ta_desktop.svg","pages/Register/Register.styled.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledBackground = styled.div`\n  position: absolute;\n  z-index: -1;\n  top: 56px;\n  margin: 0 auto;\n  width: 320px;\n  height: 296px;\n  background-color: var(--auth-background-top-part-color);\n  border-radius: 0 0 0 112px;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    height: 527px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n  }\n`;\n","import React from 'react';\nimport { StyledBackground } from './Background.styled';\n\nconst Background = () => {\n  return <StyledBackground />;\n};\n\nexport default Background;\n","var _path, _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGoogle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 82,\n    height: 20,\n    viewBox: \"0 0 82 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.5272 9.91406V13.7148C35.3859 13.9017 35.1649 14.1068 34.8641 14.3301C34.5679 14.5488 34.1736 14.738 33.6815 14.8975C33.1893 15.057 32.5763 15.1367 31.8426 15.1367C31.2182 15.1367 30.6463 15.0319 30.1268 14.8223C29.6072 14.6081 29.1583 14.2959 28.7801 13.8857C28.4064 13.4756 28.117 12.9766 27.9119 12.3887C27.7068 11.7962 27.6043 11.1217 27.6043 10.3652V9.6748C27.6043 8.92285 27.6977 8.25293 27.8846 7.66504C28.076 7.07259 28.3494 6.57129 28.7049 6.16113C29.0604 5.75098 29.4887 5.44108 29.9901 5.23145C30.4959 5.01725 31.0679 4.91016 31.7059 4.91016C32.5216 4.91016 33.1961 5.04688 33.7293 5.32031C34.2671 5.58919 34.6818 5.96289 34.9734 6.44141C35.2651 6.91992 35.4497 7.4668 35.5272 8.08203H33.8455C33.7908 7.73568 33.6837 7.42578 33.5242 7.15234C33.3693 6.87891 33.146 6.66471 32.8543 6.50977C32.5672 6.35026 32.1935 6.27051 31.7332 6.27051C31.3367 6.27051 30.9881 6.3457 30.6873 6.49609C30.3865 6.64648 30.1359 6.86751 29.9354 7.15918C29.7394 7.45085 29.5913 7.80632 29.491 8.22559C29.3908 8.64486 29.3406 9.12337 29.3406 9.66113V10.3652C29.3406 10.9121 29.3976 11.3975 29.5115 11.8213C29.63 12.2451 29.7986 12.6029 30.0174 12.8945C30.2407 13.1862 30.5119 13.4072 30.8309 13.5576C31.1499 13.7035 31.5099 13.7764 31.9109 13.7764C32.3029 13.7764 32.6242 13.7445 32.8748 13.6807C33.1255 13.6123 33.3237 13.5326 33.4695 13.4414C33.6199 13.3457 33.7361 13.2546 33.8182 13.168V11.1924H31.7469V9.91406H35.5272ZM37.229 11.3838V11.2266C37.229 10.6934 37.3065 10.1989 37.4615 9.74316C37.6164 9.28288 37.8397 8.88411 38.1314 8.54688C38.4276 8.20508 38.7876 7.94076 39.2115 7.75391C39.6398 7.5625 40.1229 7.4668 40.6607 7.4668C41.203 7.4668 41.6861 7.5625 42.1099 7.75391C42.5383 7.94076 42.9006 8.20508 43.1968 8.54688C43.493 8.88411 43.7186 9.28288 43.8736 9.74316C44.0285 10.1989 44.106 10.6934 44.106 11.2266V11.3838C44.106 11.917 44.0285 12.4115 43.8736 12.8672C43.7186 13.3229 43.493 13.7217 43.1968 14.0635C42.9006 14.4007 42.5406 14.665 42.1167 14.8564C41.6929 15.0433 41.2121 15.1367 40.6743 15.1367C40.132 15.1367 39.6467 15.0433 39.2183 14.8564C38.7945 14.665 38.4344 14.4007 38.1382 14.0635C37.842 13.7217 37.6164 13.3229 37.4615 12.8672C37.3065 12.4115 37.229 11.917 37.229 11.3838ZM38.8765 11.2266V11.3838C38.8765 11.7165 38.9107 12.0309 38.979 12.3271C39.0474 12.6234 39.1545 12.8831 39.3003 13.1064C39.4462 13.3298 39.633 13.5052 39.8609 13.6328C40.0887 13.7604 40.3599 13.8242 40.6743 13.8242C40.9797 13.8242 41.244 13.7604 41.4673 13.6328C41.6952 13.5052 41.882 13.3298 42.0279 13.1064C42.1737 12.8831 42.2808 12.6234 42.3492 12.3271C42.4221 12.0309 42.4585 11.7165 42.4585 11.3838V11.2266C42.4585 10.8984 42.4221 10.5885 42.3492 10.2969C42.2808 10.0007 42.1714 9.73861 42.021 9.51074C41.8752 9.28288 41.6883 9.10514 41.4605 8.97754C41.2372 8.84538 40.9706 8.7793 40.6607 8.7793C40.3508 8.7793 40.0819 8.84538 39.854 8.97754C39.6307 9.10514 39.4462 9.28288 39.3003 9.51074C39.1545 9.73861 39.0474 10.0007 38.979 10.2969C38.9107 10.5885 38.8765 10.8984 38.8765 11.2266ZM45.4524 11.3838V11.2266C45.4524 10.6934 45.5299 10.1989 45.6848 9.74316C45.8398 9.28288 46.0631 8.88411 46.3547 8.54688C46.651 8.20508 47.011 7.94076 47.4348 7.75391C47.8632 7.5625 48.3463 7.4668 48.884 7.4668C49.4264 7.4668 49.9094 7.5625 50.3333 7.75391C50.7616 7.94076 51.1239 8.20508 51.4202 8.54688C51.7164 8.88411 51.942 9.28288 52.0969 9.74316C52.2519 10.1989 52.3293 10.6934 52.3293 11.2266V11.3838C52.3293 11.917 52.2519 12.4115 52.0969 12.8672C51.942 13.3229 51.7164 13.7217 51.4202 14.0635C51.1239 14.4007 50.7639 14.665 50.3401 14.8564C49.9163 15.0433 49.4355 15.1367 48.8977 15.1367C48.3554 15.1367 47.87 15.0433 47.4417 14.8564C47.0178 14.665 46.6578 14.4007 46.3616 14.0635C46.0654 13.7217 45.8398 13.3229 45.6848 12.8672C45.5299 12.4115 45.4524 11.917 45.4524 11.3838ZM47.0999 11.2266V11.3838C47.0999 11.7165 47.134 12.0309 47.2024 12.3271C47.2708 12.6234 47.3779 12.8831 47.5237 13.1064C47.6695 13.3298 47.8564 13.5052 48.0842 13.6328C48.3121 13.7604 48.5833 13.8242 48.8977 13.8242C49.203 13.8242 49.4674 13.7604 49.6907 13.6328C49.9185 13.5052 50.1054 13.3298 50.2512 13.1064C50.3971 12.8831 50.5042 12.6234 50.5725 12.3271C50.6454 12.0309 50.6819 11.7165 50.6819 11.3838V11.2266C50.6819 10.8984 50.6454 10.5885 50.5725 10.2969C50.5042 10.0007 50.3948 9.73861 50.2444 9.51074C50.0986 9.28288 49.9117 9.10514 49.6838 8.97754C49.4605 8.84538 49.1939 8.7793 48.884 8.7793C48.5741 8.7793 48.3053 8.84538 48.0774 8.97754C47.8541 9.10514 47.6695 9.28288 47.5237 9.51074C47.3779 9.73861 47.2708 10.0007 47.2024 10.2969C47.134 10.5885 47.0999 10.8984 47.0999 11.2266ZM58.7275 7.60352H60.2246V14.7949C60.2246 15.4603 60.0833 16.0254 59.8008 16.4902C59.5182 16.9551 59.124 17.3083 58.6181 17.5498C58.1123 17.7959 57.5267 17.9189 56.8613 17.9189C56.5787 17.9189 56.2643 17.8779 55.9179 17.7959C55.5761 17.7139 55.2435 17.5817 54.9199 17.3994C54.6009 17.2217 54.3343 16.987 54.1201 16.6953L54.8926 15.7246C55.1569 16.0391 55.4485 16.2692 55.7676 16.415C56.0866 16.5609 56.4215 16.6338 56.7724 16.6338C57.1507 16.6338 57.472 16.5632 57.7363 16.4219C58.0052 16.2852 58.2125 16.0824 58.3584 15.8135C58.5042 15.5446 58.5771 15.2165 58.5771 14.8291V9.27832L58.7275 7.60352ZM53.7031 11.3838V11.2402C53.7031 10.6797 53.7715 10.1693 53.9082 9.70898C54.0449 9.24414 54.2409 8.84538 54.4961 8.5127C54.7513 8.17546 55.0612 7.91797 55.4258 7.74023C55.7903 7.55794 56.2028 7.4668 56.6631 7.4668C57.1416 7.4668 57.5495 7.55339 57.8867 7.72656C58.2285 7.89974 58.5133 8.14811 58.7412 8.47168C58.969 8.79069 59.1468 9.1735 59.2744 9.62012C59.4065 10.0622 59.5045 10.5544 59.5683 11.0967V11.5547C59.5091 12.0833 59.4088 12.5664 59.2676 13.0039C59.1263 13.4414 58.9394 13.8197 58.707 14.1387C58.4746 14.4577 58.1875 14.7038 57.8457 14.877C57.5084 15.0501 57.1097 15.1367 56.6494 15.1367C56.1982 15.1367 55.7903 15.0433 55.4258 14.8564C55.0657 14.6696 54.7558 14.4076 54.4961 14.0703C54.2409 13.7331 54.0449 13.3366 53.9082 12.8809C53.7715 12.4206 53.7031 11.9215 53.7031 11.3838ZM55.3506 11.2402V11.3838C55.3506 11.721 55.3825 12.0355 55.4463 12.3271C55.5146 12.6188 55.6172 12.8763 55.7539 13.0996C55.8952 13.3184 56.0729 13.4915 56.2871 13.6191C56.5058 13.7422 56.7633 13.8037 57.0595 13.8037C57.4469 13.8037 57.7636 13.7217 58.0097 13.5576C58.2604 13.3936 58.4518 13.1725 58.584 12.8945C58.7207 12.612 58.8164 12.2975 58.8711 11.9512V10.7139C58.8437 10.445 58.7868 10.1943 58.7002 9.96191C58.6181 9.72949 58.5065 9.52669 58.3652 9.35352C58.2239 9.17578 58.0462 9.03906 57.832 8.94336C57.6178 8.8431 57.3649 8.79297 57.0732 8.79297C56.777 8.79297 56.5195 8.85677 56.3008 8.98438C56.082 9.11198 55.902 9.28743 55.7607 9.51074C55.624 9.73405 55.5215 9.99382 55.4531 10.29C55.3847 10.5863 55.3506 10.903 55.3506 11.2402ZM63.9772 4.5V15H62.3229V4.5H63.9772ZM69.3227 15.1367C68.7758 15.1367 68.2813 15.0479 67.8393 14.8701C67.4018 14.6878 67.0281 14.4349 66.7182 14.1113C66.4128 13.7878 66.1781 13.4072 66.0141 12.9697C65.85 12.5322 65.768 12.0605 65.768 11.5547V11.2812C65.768 10.7025 65.8523 10.1784 66.0209 9.70898C66.1895 9.23958 66.4242 8.83854 66.725 8.50586C67.0258 8.16862 67.3813 7.91113 67.7914 7.7334C68.2016 7.55566 68.6459 7.4668 69.1244 7.4668C69.6531 7.4668 70.1156 7.55566 70.5121 7.7334C70.9086 7.91113 71.2367 8.16178 71.4965 8.48535C71.7608 8.80436 71.9568 9.1849 72.0844 9.62695C72.2166 10.069 72.2826 10.5566 72.2826 11.0898V11.7939H66.5678V10.6113H70.6557V10.4814C70.6466 10.1852 70.5873 9.90723 70.4779 9.64746C70.3731 9.3877 70.2113 9.17806 69.9926 9.01855C69.7738 8.85905 69.4822 8.7793 69.1176 8.7793C68.8442 8.7793 68.6003 8.83854 68.3861 8.95703C68.1765 9.07096 68.0011 9.2373 67.8598 9.45605C67.7185 9.6748 67.6091 9.93913 67.5317 10.249C67.4587 10.5544 67.4223 10.8984 67.4223 11.2812V11.5547C67.4223 11.8783 67.4656 12.179 67.5522 12.457C67.6433 12.7305 67.7755 12.9697 67.9486 13.1748C68.1218 13.3799 68.3315 13.5417 68.5776 13.6602C68.8236 13.7741 69.1039 13.8311 69.4184 13.8311C69.8149 13.8311 70.168 13.7513 70.4779 13.5918C70.7878 13.4323 71.0567 13.2067 71.2846 12.915L72.1527 13.7559C71.9932 13.9883 71.7859 14.2116 71.5307 14.4258C71.2755 14.6354 70.9633 14.8063 70.5942 14.9385C70.2296 15.0706 69.8057 15.1367 69.3227 15.1367Z\",\n    fill: \"black\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_1_179)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.1942 8.33402C17.2706 8.33402 17.3325 8.39888 17.3325 8.47889V10C17.3325 10.5693 17.282 11.126 17.1852 11.666C16.4367 15.8604 12.9111 19.0303 8.68524 18.9998C3.94348 18.9655 0.148642 14.9498 0.15914 9.97971C0.169572 5.01857 4.01003 1 8.74578 1C11.066 1 13.1711 1.96476 14.7167 3.53188C14.7725 3.58845 14.7739 3.68168 14.719 3.7392L12.6659 5.89115C12.613 5.94655 12.5276 5.948 12.4735 5.89396C11.5034 4.92614 10.1909 4.33197 8.74578 4.33197C5.76154 4.33197 3.35845 6.83284 3.33819 9.96066C3.31783 13.109 5.74678 15.668 8.74578 15.668C11.1791 15.668 13.2371 13.9832 13.9158 11.666H8.884C8.80766 11.666 8.74578 11.6011 8.74578 11.5211V8.47886C8.74578 8.39884 8.80766 8.33398 8.884 8.33398H17.1942V8.33402Z\",\n    fill: \"#2196F3\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.1939 8.33398H16.1573C16.2336 8.33398 16.2955 8.39885 16.2955 8.47886V9.99997C16.2955 10.5693 16.245 11.126 16.1483 11.666C15.4341 15.6675 12.1925 18.7365 8.22656 18.9837C8.37831 18.9931 8.53105 18.9986 8.68488 18.9997C12.9108 19.0303 16.4363 15.8604 17.1849 11.666C17.2816 11.126 17.3321 10.5693 17.3321 9.99997V8.47883C17.3321 8.39885 17.2702 8.33398 17.1939 8.33398V8.33398Z\",\n    fill: \"#1E88E5\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.83357 7.62632L1.22577 5.65138C2.68879 2.87787 5.50804 1 8.74541 1C11.0656 1 13.1707 1.96476 14.7163 3.53188C14.7721 3.58845 14.7736 3.68168 14.7186 3.7392L12.6655 5.89115C12.6128 5.94645 12.5274 5.94817 12.4733 5.89424C11.5033 4.92625 10.1907 4.332 8.74541 4.332C6.56748 4.332 4.69016 5.68144 3.83357 7.62632V7.62632Z\",\n    fill: \"#F44336\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.08075 7.05622L3.83359 7.62635C4.61545 5.85117 6.24786 4.57268 8.18288 4.36297C8.19743 4.36132 8.21142 4.35931 8.22625 4.35784C8.05595 4.34089 7.88338 4.33203 7.70883 4.33203C5.74138 4.33203 4.02673 5.41917 3.08075 7.05622V7.05622Z\",\n    fill: \"#E53935\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.6797 3.53188C13.7355 3.58845 13.7369 3.68168 13.682 3.73923L12.0156 5.4859C12.1752 5.61317 12.328 5.74929 12.4731 5.894C12.5272 5.94803 12.6126 5.94659 12.6655 5.89118L14.7186 3.73923C14.7735 3.68168 14.772 3.58848 14.7163 3.53188C13.1707 1.96476 11.0656 1 8.74538 1C8.57126 1 8.39852 1.00608 8.22699 1.0168C10.3415 1.14882 12.25 2.08232 13.6797 3.53188V3.53188Z\",\n    fill: \"#E53935\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.0443 16.1164C13.4762 17.89 11.2344 19 8.74544 19C5.38369 19 2.47321 16.9751 1.06372 14.0252L3.72609 12.1129C4.52502 14.1965 6.47144 15.668 8.74544 15.668C10.1725 15.668 11.4704 15.0885 12.4365 14.1418L15.0443 16.1164Z\",\n    fill: \"#4CAF50\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.72618 12.1129L2.9411 12.6768C3.85293 14.4572 5.64604 15.668 7.70888 15.668C7.88333 15.668 8.05577 15.659 8.226 15.6421C6.17831 15.4375 4.46349 14.0359 3.72618 12.1129Z\",\n    fill: \"#43A047\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.74547 19.0001C11.2344 19.0001 13.4763 17.89 15.0443 16.1165L14.4056 15.6328C12.9332 17.5534 10.7245 18.8275 8.22845 18.9837C8.39952 18.9944 8.57185 19.0001 8.74547 19.0001Z\",\n    fill: \"#43A047\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.33773 9.99998C3.33773 10.7468 3.47559 11.4599 3.72611 12.1129L1.06371 14.0252C0.48461 12.8141 0.158752 11.4469 0.158752 9.99998C0.158752 8.42273 0.545756 6.94034 1.22578 5.65137L3.83358 7.6263C3.51534 8.3481 3.33773 9.15251 3.33773 9.99998V9.99998Z\",\n    fill: \"#FFC107\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.94102 12.6768L3.7261 12.1129C3.47558 11.4599 3.33772 10.7468 3.33772 9.99997C3.33772 9.15249 3.51532 8.34808 3.83357 7.62628L3.08072 7.05615C2.59185 7.90219 2.30812 8.89497 2.30121 9.96066C2.29484 10.9434 2.52718 11.8688 2.94102 12.6768V12.6768Z\",\n    fill: \"#FFB300\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_1_179\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 17.1733,\n    height: 18,\n    fill: \"white\",\n    transform: \"translate(0.158752 1)\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGoogle);\nexport default __webpack_public_path__ + \"static/media/google.d64f9163b8f61487544747b482817a75.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const FormLayout = styled.div`\n  font-family: 'Roboto';\n  font-style: normal;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 40px 20px;\n  margin-top: 50px;\n  border-radius: 30px;\n  background-color: var(--auth-form-background-color);\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n  color: var(--general-text-color);\n\n\n  @media screen and (min-width: 768px) {\n    width: 425px;\n    padding: 55px 85px;\n    margin-top: 80px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-top: 0;\n    margin-left: 160px;\n  }\n`;\n\nexport const FormText = styled.p`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.16;\n  letter-spacing: 0.04em;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  position: relative;\n  width: 100%;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n  color: var(--auth-form-validation-error-color);\n`;\n\nexport const LoginLabel = styled.label`\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.16;\n  letter-spacing: 0.04em;\n  color: var(--general-header-color);\n  margin-bottom: 12px;\n\n  &:last-of-type {\n    margin-top: 32px;\n  }\n`;\n\nexport const LoginInput = styled.input`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.14;\n  letter-spacing: 0.04em;\n  background-color: var(--auth-form-input-background-color);\n  border: none;\n  width: 100%;\n  height: 52px;\n  padding: 0 20px;\n  border-radius: 30px;\n`;\nexport const LoginBtnBlock = styled.div`\n  display: flex;\n  gap: 15px;\n  margin-top: 40px;\n`;\n\nexport const LoginBtn = styled.button`\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 14px;\n  letter-spacing: 0.02em;\n  width: 100%;\n  padding: 0;\n  margin: 0;\n  color: var(--table-description-text-color);\n  background-color: var(--auth-background-top-part-color);\n  height: 44px;\n  border: none;\n  border-radius: 16px;\n  filter: var(--auth-form-button-shadow);\n  transition: color 250ms linear, background-color 250ms linear;\n\n  &:hover {\n    color: var(--auth-background-bot-part-color);\n    background-color: var(--general-accent-background-color);\n  }\n`;\n\nexport const GoogleBtn = styled.a`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 19px;\n  margin: 0;\n  background-color: var(--auth-form-input-background-colo);\n  border: none;\n  border-radius: 26px;\n  transition: background-color 250ms linear;\n\n  &:hover {\n    background-color: var(--general-accent-background-color);\n  }\n`;\n\nexport const ErrorText = styled.span`\n  display: flex;\n  position: absolute;\n  top:80px;\n\n  &:last-of-type {\n    top:190px;\n  }\n`;\n\n","import React from 'react';\nimport { Formik } from 'formik';\nimport shortid from 'shortid';\nimport { useDispatch } from 'react-redux';\nimport google from '../../images/google.svg';\nimport { logIn, signUp } from '../../redux/Auth/authOperations';\nimport {\n  FormLayout,\n  Form,\n  LoginLabel,\n  LoginInput,\n  LoginBtn,\n  LoginBtnBlock,\n  GoogleBtn,\n  ErrorText,\n} from './LoginForm.styled';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const emailID = shortid.generate();\n  const passwordlID = shortid.generate();\n  return (\n    <FormLayout>\n      <p>You can log in with your Google Account:</p>\n      <GoogleBtn\n        type=\"button\"\n        href=\"https://kapusta-backend.goit.global/auth/google\"\n      >\n        <img src={google} alt=\"google\" />\n      </GoogleBtn>\n      <p>Or log in using an email and password, after registering:</p>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'This is a required field';\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = 'Invalid email address';\n          }\n          if (!values.password) {\n            errors.password = 'This is a required field';\n          }\n          return errors;\n        }}\n        onSubmit={values => {\n          dispatch(logIn(values));\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            <LoginLabel htmlFor={emailID}>Email:</LoginLabel>\n            <LoginInput\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n              id={emailID}\n              placeholder=\"your@email.com\"\n            />\n            <ErrorText>\n              {errors.email && touched.email && errors.email}\n            </ErrorText>\n            <LoginLabel htmlFor={passwordlID}>Password:</LoginLabel>\n            <LoginInput\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              id={passwordlID}\n              placeholder=\"Password (min 8 characters)\"\n              pattern=\"[0-9A-Za-zА-Яа-яЁёЄєЇї!@#$%^&*]{8,}\"\n            />\n            <ErrorText>\n              {errors.password && touched.password && errors.password}\n            </ErrorText>\n\n            <LoginBtnBlock>\n              <LoginBtn type=\"submit\" disabled={isSubmitting}>\n                {'Log in'.toUpperCase()}\n              </LoginBtn>\n              <LoginBtn\n                type=\"button\"\n                disabled={isSubmitting}\n                onClick={() => {\n                  dispatch(signUp(values));\n                }}\n              >\n                {'Registration'.toUpperCase()}\n              </LoginBtn>\n            </LoginBtnBlock>\n          </Form>\n        )}\n      </Formik>\n    </FormLayout>\n  );\n};\n\nexport default LoginForm;\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgKaputaMobile(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 183,\n    height: 64,\n    viewBox: \"0 0 183 64\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8.68835 26.5354L12.2528 22.6244L19.9263 36.0406H30.2236L18.045 15.941L30.2236 0H19.4807L11.7082 11.3122L8.68835 15.8915V0H0V36.0406H8.68835V26.5354ZM46.3379 33.6395C46.5689 34.6957 46.833 35.496 47.13 36.0406H55.4718V35.6198C54.7457 34.3161 54.3662 32.4349 54.3332 29.9761V18.1193C54.2836 15.2149 53.2688 12.9294 51.2885 11.2627C49.3083 9.59597 46.6102 8.76261 43.1942 8.76261C39.7783 8.76261 36.9647 9.57122 34.7534 11.1884C32.5586 12.8056 31.4612 14.9096 31.4612 17.5005H39.8031C39.8031 15.5532 40.7932 14.5796 42.7734 14.5796C44.9022 14.5796 45.9666 15.809 45.9666 18.2678V19.6788H43.3923C39.2997 19.6788 36.1808 20.4213 34.0356 21.9065C31.8903 23.3917 30.8177 25.5865 30.8177 28.4909C30.8177 30.8012 31.7005 32.7237 33.4663 34.2584C35.232 35.7765 37.3773 36.5356 39.9021 36.5356C42.6579 36.5356 44.8032 35.5703 46.3379 33.6395ZM44.4814 29.9266C43.8048 30.3721 42.9467 30.5949 41.9071 30.5949C41.115 30.5949 40.4631 30.3639 39.9516 29.9018C39.44 29.4232 39.1842 28.8044 39.1842 28.0453C39.1842 25.438 40.6364 24.1343 43.5408 24.1343H45.9666V28.4166C45.6696 28.9777 45.1745 29.481 44.4814 29.9266ZM83.8389 22.8472C83.8389 27.0057 82.8983 30.3309 81.017 32.8227C79.1523 35.298 76.6275 36.5356 73.4426 36.5356C70.9838 36.5356 68.9623 35.6363 67.3781 33.8376V46.3379H59.0363V9.25768H66.8335L67.081 11.733C68.6817 9.75274 70.7857 8.76261 73.3931 8.76261C76.6935 8.76261 79.2596 9.98377 81.0913 12.4261C82.923 14.8519 83.8389 18.1936 83.8389 22.4511V22.8472ZM75.4971 22.3273C75.4971 17.5747 74.1109 15.1984 71.3386 15.1984C69.3583 15.1984 68.0381 15.908 67.3781 17.3272V27.872C68.1042 29.3572 69.4408 30.0998 71.3881 30.0998C74.0449 30.0998 75.4146 27.806 75.4971 23.2185V22.3273ZM96.3392 36.5356C99.3426 36.5356 101.727 35.4053 103.493 33.1445L103.74 36.0406H111.562V9.25768H103.171V28.0453C102.363 29.415 101.001 30.0998 99.0868 30.0998C96.8591 30.0998 95.7452 28.9529 95.7452 26.6591V9.25768H87.4034V26.6096C87.4034 29.811 88.1542 32.2699 89.6559 33.9861C91.1741 35.6858 93.4019 36.5356 96.3392 36.5356ZM130.177 28.5156C130.177 27.806 129.805 27.2367 129.063 26.8077C128.32 26.3786 126.909 25.933 124.83 25.471C122.751 25.0089 121.035 24.4066 119.681 23.664C118.328 22.9049 117.297 21.989 116.587 20.9164C115.878 19.8438 115.523 18.6144 115.523 17.2282C115.523 14.7694 116.538 12.7479 118.568 11.1637C120.272 9.81955 122.419 9.03976 125.007 8.82431V2.74128H128.983V8.90361C131.404 9.19751 133.428 9.95086 135.053 11.1637C137.198 12.7644 138.271 14.8684 138.271 17.4757H129.905C129.905 15.3304 128.774 14.2578 126.513 14.2578C125.639 14.2578 124.904 14.5053 124.31 15.0004C123.716 15.479 123.419 16.0813 123.419 16.8074C123.419 17.55 123.782 18.1523 124.508 18.6144C125.234 19.0764 126.39 19.456 127.974 19.753C129.574 20.05 130.977 20.4048 132.182 20.8174C136.208 22.2036 138.222 24.6871 138.222 28.2681C138.222 30.7104 137.132 32.6989 134.954 34.2336C133.328 35.388 131.338 36.1083 128.983 36.3943V42.5017H125.007V36.4713C123.324 36.326 121.788 35.9349 120.399 35.298C118.601 34.4729 117.198 33.3507 116.191 31.9316C115.185 30.5124 114.681 29.0189 114.681 27.4512H122.479C122.512 28.6889 122.924 29.5965 123.716 30.1741C124.508 30.7352 125.523 31.0157 126.761 31.0157C127.9 31.0157 128.749 30.7847 129.31 30.3226C129.888 29.8605 130.177 29.2582 130.177 28.5156ZM151.861 9.25768V2.59908H143.519V9.25768H140.103V15.0499H143.519V28.3424C143.519 31.0982 144.204 33.1527 145.573 34.5059C146.943 35.8591 149.063 36.5356 151.935 36.5356C153.569 36.5356 155.136 36.2964 156.638 35.8178V29.8523C156.077 29.9513 155.384 30.0008 154.559 30.0008C153.486 30.0008 152.768 29.8028 152.405 29.4067C152.042 29.0107 151.861 28.3093 151.861 27.3027V15.0499H156.267V9.25768H151.861ZM174.658 36.0406C174.361 35.496 174.097 34.6957 173.866 33.6395C172.331 35.5703 170.186 36.5356 167.43 36.5356C164.905 36.5356 162.76 35.7765 160.994 34.2584C159.229 32.7237 158.346 30.8012 158.346 28.4909C158.346 25.5865 159.419 23.3917 161.564 21.9065C163.709 20.4213 166.828 19.6788 170.92 19.6788H173.495V18.2678C173.495 15.809 172.43 14.5796 170.302 14.5796C168.321 14.5796 167.331 15.5532 167.331 17.5005H158.989C158.989 14.9096 160.087 12.8056 162.282 11.1884C164.493 9.57122 167.307 8.76261 170.722 8.76261C174.138 8.76261 176.836 9.59597 178.817 11.2627C180.797 12.9294 181.812 15.2149 181.861 18.1193V29.9761C181.894 32.4349 182.274 34.3161 183 35.6198V36.0406H174.658ZM169.435 30.5949C170.475 30.5949 171.333 30.3721 172.01 29.9266C172.703 29.481 173.198 28.9777 173.495 28.4166V24.1343H171.069C168.165 24.1343 166.712 25.438 166.712 28.0453C166.712 28.8044 166.968 29.4232 167.48 29.9018C167.991 30.3639 168.643 30.5949 169.435 30.5949Z\",\n    fill: \"black\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.6177 60.5752C16.6177 60.2155 16.4907 59.9404 16.2368 59.75C15.9829 59.5553 15.5259 59.3522 14.8657 59.1406C14.2056 58.9248 13.6829 58.7132 13.2979 58.5059C12.2484 57.9388 11.7236 57.175 11.7236 56.2144C11.7236 55.715 11.8633 55.2707 12.1426 54.8813C12.4261 54.4878 12.8302 54.181 13.355 53.9609C13.884 53.7409 14.4764 53.6309 15.1323 53.6309C15.7925 53.6309 16.3807 53.7515 16.897 53.9927C17.4132 54.2297 17.8132 54.5661 18.0967 55.002C18.3844 55.4378 18.5283 55.9329 18.5283 56.4873H16.624C16.624 56.0641 16.4907 55.7362 16.2241 55.5034C15.9575 55.2664 15.583 55.1479 15.1006 55.1479C14.6351 55.1479 14.2733 55.2474 14.0151 55.4463C13.757 55.641 13.6279 55.8991 13.6279 56.2207C13.6279 56.5212 13.7782 56.7729 14.0786 56.9761C14.3833 57.1792 14.8298 57.3696 15.418 57.5474C16.5013 57.8732 17.2905 58.2773 17.7856 58.7598C18.2808 59.2422 18.5283 59.8431 18.5283 60.5625C18.5283 61.3623 18.2257 61.9907 17.6206 62.4478C17.0155 62.9006 16.2008 63.127 15.1768 63.127C14.4658 63.127 13.8184 62.9979 13.2344 62.7397C12.6504 62.4774 12.2039 62.1198 11.895 61.667C11.5903 61.2142 11.438 60.6895 11.438 60.0928H13.3486C13.3486 61.1126 13.958 61.6226 15.1768 61.6226C15.6296 61.6226 15.9829 61.5316 16.2368 61.3496C16.4907 61.1634 16.6177 60.9053 16.6177 60.5752ZM24.2615 53.7578L26.6355 60.4609L28.9969 53.7578H31.4979V63H29.5872V60.4736L29.7776 56.1128L27.283 63H25.9754L23.4871 56.1191L23.6775 60.4736V63H21.7732V53.7578H24.2615ZM40.443 61.0957H37.1041L36.4693 63H34.4444L37.8849 53.7578H39.6495L43.109 63H41.0841L40.443 61.0957ZM37.6183 59.5532H39.9288L38.7672 56.0938L37.6183 59.5532ZM49.3437 59.6167H47.8266V63H45.9223V53.7578H49.3563C50.4481 53.7578 51.2903 54.0011 51.8827 54.4878C52.4752 54.9744 52.7714 55.6621 52.7714 56.5508C52.7714 57.1813 52.6339 57.7082 52.3588 58.1313C52.088 58.5503 51.6754 58.8846 51.121 59.1343L53.1205 62.9111V63H51.0766L49.3437 59.6167ZM47.8266 58.0742H49.3627C49.8409 58.0742 50.2112 57.9536 50.4735 57.7124C50.7359 57.467 50.8671 57.1305 50.8671 56.7031C50.8671 56.2673 50.7423 55.9245 50.4926 55.6748C50.2471 55.4251 49.8684 55.3003 49.3563 55.3003H47.8266V58.0742ZM62.8146 55.3003H59.9836V63H58.0793V55.3003H55.2863V53.7578H62.8146V55.3003ZM76.2234 59.2231H72.5672V63H70.6629V53.7578H76.6805V55.3003H72.5672V57.687H76.2234V59.2231ZM81.7599 63H79.8556V53.7578H81.7599V63ZM92.9965 63H91.0922L87.3852 56.9189V63H85.4809V53.7578H87.3852L91.0985 59.8516V53.7578H92.9965V63ZM101.942 61.0957H98.6027L97.968 63H95.9431L99.3835 53.7578H101.148L104.608 63H102.583L101.942 61.0957ZM99.1169 59.5532H101.427L100.266 56.0938L99.1169 59.5532ZM114.937 63H113.032L109.325 56.9189V63H107.421V53.7578H109.325L113.039 59.8516V53.7578H114.937V63ZM125.805 59.9214C125.733 60.9159 125.365 61.6987 124.7 62.27C124.04 62.8413 123.169 63.127 122.085 63.127C120.9 63.127 119.967 62.7292 119.286 61.9336C118.609 61.1338 118.27 60.0378 118.27 58.6455V58.0806C118.27 57.1919 118.427 56.409 118.74 55.7319C119.053 55.0549 119.5 54.5365 120.079 54.1768C120.663 53.8128 121.34 53.6309 122.111 53.6309C123.177 53.6309 124.036 53.9165 124.688 54.4878C125.339 55.0591 125.716 55.861 125.818 56.8936H123.913C123.867 56.2969 123.7 55.8652 123.412 55.5986C123.128 55.3278 122.695 55.1924 122.111 55.1924C121.476 55.1924 121 55.4209 120.682 55.8779C120.369 56.3307 120.208 57.0353 120.2 57.9917V58.6899C120.2 59.6886 120.35 60.4186 120.651 60.8799C120.955 61.3411 121.434 61.5718 122.085 61.5718C122.673 61.5718 123.111 61.4385 123.399 61.1719C123.691 60.901 123.858 60.4842 123.901 59.9214H125.805ZM134.566 58.9946H130.91V61.4702H135.201V63H129.005V53.7578H135.188V55.3003H130.91V57.5029H134.566V58.9946Z\",\n    fill: \"#52555F\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgKaputaMobile);\nexport default __webpack_public_path__ + \"static/media/Kapu$ta_mobile.34366f6b6ec8fd1a03daf780e7ddb3bc.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgKaputaTablet(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 307,\n    height: 101,\n    viewBox: \"0 0 307 101\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M14.5528 44.4919L20.5232 37.9343L33.3761 60.4293H50.6239L30.2251 26.7283L50.6239 0H32.6298L19.6111 18.9672L14.5528 26.6453V0H0V60.4293H14.5528V44.4919ZM77.6151 56.4035C78.002 58.1743 78.4443 59.5162 78.9418 60.4293H92.9142V59.7237C91.698 57.5379 91.0623 54.3836 91.007 50.2609V30.3807C90.9241 25.5109 89.2242 21.6787 85.9073 18.8842C82.5904 16.0896 78.0711 14.6923 72.3495 14.6923C66.6279 14.6923 61.9152 16.0481 58.2113 18.7596C54.5351 21.4712 52.697 24.999 52.697 29.3431H66.6694C66.6694 26.0781 68.3278 24.4456 71.6447 24.4456C75.2103 24.4456 76.9932 26.507 76.9932 30.6297V32.9954H72.6812C65.8263 32.9954 60.6022 34.2405 57.0089 36.7307C53.4156 39.2209 51.619 42.9009 51.619 47.7707C51.619 51.6444 53.0978 54.8678 56.0553 57.441C59.0129 59.9866 62.6062 61.2594 66.8352 61.2594C71.4512 61.2594 75.0445 59.6407 77.6151 56.4035ZM74.5055 50.1779C73.3722 50.925 71.9349 51.2985 70.1935 51.2985C68.8668 51.2985 67.775 50.9111 66.9181 50.1364C66.0613 49.334 65.6328 48.2964 65.6328 47.0236C65.6328 42.6519 68.0652 40.4661 72.93 40.4661H76.9932V47.6462C76.4956 48.5869 75.6664 49.4308 74.5055 50.1779ZM140.429 38.3079C140.429 45.2805 138.853 50.8558 135.702 55.0338C132.579 59.1842 128.35 61.2594 123.015 61.2594C118.896 61.2594 115.51 59.7514 112.857 56.7355V77.6948H98.8846V15.5224H111.945L112.359 19.6727C115.041 16.3524 118.565 14.6923 122.932 14.6923C128.46 14.6923 132.758 16.7398 135.826 20.8348C138.894 24.9022 140.429 30.5052 140.429 37.6438V38.3079ZM126.456 37.4363C126.456 29.4676 124.134 25.4832 119.491 25.4832C116.174 25.4832 113.963 26.673 112.857 29.0526V46.7331C114.073 49.2233 116.312 50.4684 119.574 50.4684C124.024 50.4684 126.318 46.6224 126.456 38.9304V37.4363ZM161.366 61.2594C166.397 61.2594 170.391 59.364 173.349 55.5734L173.763 60.4293H186.865V15.5224H172.81V47.0236C171.455 49.3202 169.175 50.4684 165.969 50.4684C162.237 50.4684 160.371 48.5454 160.371 44.6994V15.5224H146.399V44.6164C146.399 49.9842 147.657 54.1069 150.172 56.9845C152.715 59.8344 156.446 61.2594 161.366 61.2594ZM218.044 47.8122C218.044 46.6224 217.422 45.6678 216.178 44.9484C214.934 44.229 212.571 43.482 209.088 42.7072C205.605 41.9325 202.731 40.9226 200.464 39.6775C198.198 38.4047 196.47 36.8691 195.282 35.0706C194.093 33.2721 193.499 31.2107 193.499 28.8865C193.499 24.7638 195.199 21.3744 198.598 18.7181C201.453 16.4644 205.049 15.157 209.385 14.7957V4.59627H216.045V14.9287C220.1 15.4215 223.489 16.6846 226.211 18.7181C229.805 21.402 231.601 24.9299 231.601 29.3016H217.588C217.588 25.7046 215.694 23.9061 211.907 23.9061C210.442 23.9061 209.212 24.3211 208.217 25.1512C207.222 25.9536 206.725 26.9635 206.725 28.181C206.725 29.4261 207.333 30.436 208.549 31.2107C209.765 31.9855 211.7 32.6219 214.354 33.1199C217.035 33.618 219.384 34.2128 221.402 34.9046C228.146 37.2288 231.518 41.393 231.518 47.3972C231.518 51.4922 229.694 54.8263 226.046 57.3995C223.322 59.3352 219.988 60.5428 216.045 61.0224V71.2626H209.385V61.1514C206.565 60.9079 203.992 60.2521 201.667 59.1842C198.654 57.8007 196.304 55.9192 194.618 53.5397C192.932 51.1602 192.089 48.6561 192.089 46.0275H205.149C205.205 48.1027 205.896 49.6245 207.222 50.5929C208.549 51.5337 210.249 52.0041 212.322 52.0041C214.229 52.0041 215.653 51.6167 216.592 50.842C217.56 50.0672 218.044 49.0573 218.044 47.8122ZM254.363 15.5224V4.35788H240.391V15.5224H234.669V25.2342H240.391V47.5217C240.391 52.1424 241.538 55.5872 243.832 57.8561C246.127 60.1249 249.678 61.2594 254.488 61.2594C257.224 61.2594 259.85 60.8582 262.365 60.0558V50.0534C261.426 50.2194 260.265 50.3024 258.883 50.3024C257.086 50.3024 255.884 49.9704 255.276 49.3063C254.668 48.6423 254.363 47.4663 254.363 45.7785V25.2342H261.744V15.5224H254.363ZM292.549 60.4293C292.052 59.5162 291.609 58.1743 291.222 56.4035C288.652 59.6407 285.058 61.2594 280.442 61.2594C276.213 61.2594 272.62 59.9866 269.663 57.441C266.705 54.8678 265.226 51.6444 265.226 47.7707C265.226 42.9009 267.023 39.2209 270.616 36.7307C274.21 34.2405 279.434 32.9954 286.288 32.9954H290.6V30.6297C290.6 26.507 288.818 24.4456 285.252 24.4456C281.935 24.4456 280.277 26.0781 280.277 29.3431H266.304C266.304 24.999 268.142 21.4712 271.819 18.7596C275.522 16.0481 280.235 14.6923 285.957 14.6923C291.678 14.6923 296.198 16.0896 299.515 18.8842C302.831 21.6787 304.531 25.5109 304.614 30.3807V50.2609C304.67 54.3836 305.305 57.5379 306.521 59.7237V60.4293H292.549ZM283.801 51.2985C285.542 51.2985 286.98 50.925 288.113 50.1779C289.274 49.4308 290.103 48.5869 290.6 47.6462V40.4661H286.537C281.672 40.4661 279.24 42.6519 279.24 47.0236C279.24 48.2964 279.669 49.334 280.525 50.1364C281.382 50.9111 282.474 51.2985 283.801 51.2985Z\",\n    fill: \"black\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.459 94.0039C60.459 93.8008 60.4277 93.6185 60.3652 93.457C60.3079 93.2904 60.1986 93.1393 60.0371 93.0039C59.8757 92.8633 59.6491 92.7253 59.3574 92.5898C59.0658 92.4544 58.6882 92.3138 58.2246 92.168C57.709 92.0013 57.2194 91.8138 56.7559 91.6055C56.2975 91.3971 55.8913 91.1549 55.5371 90.8789C55.1882 90.5977 54.9121 90.2721 54.709 89.9023C54.5111 89.5326 54.4121 89.1029 54.4121 88.6133C54.4121 88.1393 54.5163 87.7096 54.7246 87.3242C54.9329 86.9336 55.2246 86.6003 55.5996 86.3242C55.9746 86.043 56.4173 85.8268 56.9277 85.6758C57.4434 85.5247 58.0085 85.4492 58.623 85.4492C59.4616 85.4492 60.1934 85.6003 60.8184 85.9023C61.4434 86.2044 61.9277 86.6185 62.2715 87.1445C62.6204 87.6706 62.7949 88.2721 62.7949 88.9492H60.4668C60.4668 88.6159 60.3965 88.3242 60.2559 88.0742C60.1204 87.819 59.9121 87.6185 59.6309 87.4727C59.3548 87.3268 59.0059 87.2539 58.584 87.2539C58.1777 87.2539 57.8392 87.3164 57.5684 87.4414C57.2975 87.5612 57.0944 87.7253 56.959 87.9336C56.8236 88.1367 56.7559 88.3659 56.7559 88.6211C56.7559 88.8138 56.8027 88.9883 56.8965 89.1445C56.9954 89.3008 57.1413 89.4466 57.334 89.582C57.5267 89.7174 57.7637 89.8451 58.0449 89.9648C58.3262 90.0846 58.6517 90.2018 59.0215 90.3164C59.6413 90.5039 60.1855 90.7148 60.6543 90.9492C61.1283 91.1836 61.5241 91.4466 61.8418 91.7383C62.1595 92.0299 62.3991 92.3607 62.5605 92.7305C62.722 93.1003 62.8027 93.5195 62.8027 93.9883C62.8027 94.4831 62.7064 94.9258 62.5137 95.3164C62.321 95.707 62.0423 96.0378 61.6777 96.3086C61.3132 96.5794 60.8783 96.7852 60.373 96.9258C59.8678 97.0664 59.3027 97.1367 58.6777 97.1367C58.1152 97.1367 57.5605 97.0638 57.0137 96.918C56.4668 96.7669 55.9694 96.5404 55.5215 96.2383C55.0788 95.9362 54.7246 95.5508 54.459 95.082C54.1934 94.6133 54.0605 94.0586 54.0605 93.418H56.4121C56.4121 93.7721 56.4668 94.0716 56.5762 94.3164C56.6855 94.5612 56.8392 94.7591 57.0371 94.9102C57.2402 95.0612 57.4798 95.1706 57.7559 95.2383C58.0371 95.306 58.3444 95.3398 58.6777 95.3398C59.084 95.3398 59.4173 95.2826 59.6777 95.168C59.9434 95.0534 60.1387 94.8945 60.2637 94.6914C60.3939 94.4883 60.459 94.2591 60.459 94.0039ZM68.3468 85.6055H70.3312L73.253 93.957L76.1749 85.6055H78.1593L74.0499 96.9805H72.4562L68.3468 85.6055ZM67.2765 85.6055H69.253L69.6124 93.7461V96.9805H67.2765V85.6055ZM77.253 85.6055H79.2374V96.9805H76.8937V93.7461L77.253 85.6055ZM88.9377 87.5508L85.844 96.9805H83.3518L87.5784 85.6055H89.1643L88.9377 87.5508ZM91.508 96.9805L88.4065 87.5508L88.1565 85.6055H89.758L94.008 96.9805H91.508ZM91.3674 92.7461V94.582H85.3596V92.7461H91.3674ZM97.9427 85.6055H102.185C103.055 85.6055 103.802 85.7357 104.427 85.9961C105.057 86.2565 105.542 86.6419 105.88 87.1523C106.219 87.6628 106.388 88.2904 106.388 89.0352C106.388 89.6445 106.284 90.168 106.076 90.6055C105.872 91.0378 105.583 91.3997 105.208 91.6914C104.839 91.9779 104.404 92.207 103.904 92.3789L103.161 92.7695H99.474L99.4584 90.9414H102.201C102.612 90.9414 102.953 90.8685 103.224 90.7227C103.495 90.5768 103.698 90.3737 103.833 90.1133C103.974 89.8529 104.044 89.5508 104.044 89.207C104.044 88.8424 103.977 88.5273 103.841 88.2617C103.706 87.9961 103.5 87.793 103.224 87.6523C102.948 87.5117 102.602 87.4414 102.185 87.4414H100.286V96.9805H97.9427V85.6055ZM104.302 96.9805L101.708 91.9102L104.185 91.8945L106.81 96.8711V96.9805H104.302ZM115.69 85.6055V96.9805H113.354V85.6055H115.69ZM119.19 85.6055V87.4414H109.909V85.6055H119.19ZM132.192 85.6055V96.9805H129.848V85.6055H132.192ZM136.723 90.4648V92.293H131.551V90.4648H136.723ZM137.27 85.6055V87.4414H131.551V85.6055H137.27ZM144.002 85.6055V96.9805H141.666V85.6055H144.002ZM158.335 85.6055V96.9805H155.991L151.421 89.3555V96.9805H149.077V85.6055H151.421L155.999 93.2383V85.6055H158.335ZM168.02 87.5508L164.926 96.9805H162.434L166.66 85.6055H168.246L168.02 87.5508ZM170.59 96.9805L167.488 87.5508L167.238 85.6055H168.84L173.09 96.9805H170.59ZM170.449 92.7461V94.582H164.441V92.7461H170.449ZM186.282 85.6055V96.9805H183.939L179.368 89.3555V96.9805H177.025V85.6055H179.368L183.946 93.2383V85.6055H186.282ZM197.795 93.207H200.131C200.084 93.9727 199.873 94.6523 199.498 95.2461C199.129 95.8398 198.61 96.3034 197.944 96.6367C197.282 96.9701 196.485 97.1367 195.553 97.1367C194.824 97.1367 194.17 97.0117 193.592 96.7617C193.014 96.5065 192.519 96.1419 192.108 95.668C191.701 95.194 191.392 94.6211 191.178 93.9492C190.965 93.2773 190.858 92.5247 190.858 91.6914V90.9023C190.858 90.069 190.967 89.3164 191.186 88.6445C191.41 87.9674 191.728 87.3919 192.139 86.918C192.556 86.444 193.053 86.0794 193.631 85.8242C194.209 85.569 194.855 85.4414 195.569 85.4414C196.517 85.4414 197.316 85.6133 197.967 85.957C198.623 86.3008 199.131 86.7747 199.491 87.3789C199.855 87.9831 200.074 88.6706 200.147 89.4414H197.803C197.777 88.9831 197.686 88.5951 197.53 88.2773C197.373 87.9544 197.136 87.7122 196.819 87.5508C196.506 87.3841 196.09 87.3008 195.569 87.3008C195.178 87.3008 194.837 87.3737 194.545 87.5195C194.254 87.6654 194.009 87.8867 193.811 88.1836C193.613 88.4805 193.465 88.8555 193.366 89.3086C193.272 89.7565 193.225 90.2826 193.225 90.8867V91.6914C193.225 92.2799 193.269 92.7982 193.358 93.2461C193.446 93.6888 193.582 94.0638 193.764 94.3711C193.951 94.6732 194.191 94.9023 194.483 95.0586C194.78 95.2096 195.136 95.2852 195.553 95.2852C196.043 95.2852 196.446 95.207 196.764 95.0508C197.082 94.8945 197.324 94.6628 197.491 94.3555C197.662 94.0482 197.764 93.6654 197.795 93.207ZM212.183 95.1523V96.9805H206.128V95.1523H212.183ZM206.894 85.6055V96.9805H204.55V85.6055H206.894ZM211.394 90.2383V92.0195H206.128V90.2383H211.394ZM212.175 85.6055V87.4414H206.128V85.6055H212.175Z\",\n    fill: \"#52555F\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgKaputaTablet);\nexport default __webpack_public_path__ + \"static/media/Kapu$ta_tablet.b46840fd1329105fc2e40d91ea63b346.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _rect, _rect2, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgKaputaDesktop(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 377,\n    height: 139,\n    viewBox: \"0 0 377 139\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.1318 68.0059L22.96 75.875V95H5.47852V22.4844H22.96V54.459L29.0361 45.2451L44.6748 22.4844H66.29L41.7861 54.5586L66.29 95H45.5713L30.1318 68.0059ZM100.307 95C99.709 93.9043 99.1777 92.2939 98.7129 90.1689C95.625 94.0537 91.3086 95.9961 85.7637 95.9961C80.6836 95.9961 76.3672 94.4688 72.8145 91.4141C69.2617 88.3262 67.4854 84.458 67.4854 79.8096C67.4854 73.9658 69.6436 69.5498 73.96 66.5615C78.2764 63.5732 84.5518 62.0791 92.7861 62.0791H97.9658V59.2402C97.9658 54.293 95.8242 51.8193 91.541 51.8193C87.5566 51.8193 85.5645 53.7783 85.5645 57.6963H68.7803C68.7803 52.4834 70.9883 48.25 75.4043 44.9961C79.8535 41.7422 85.5146 40.1152 92.3877 40.1152C99.2607 40.1152 104.689 41.792 108.674 45.1455C112.658 48.499 114.7 53.0977 114.8 58.9414V82.7979C114.866 87.7451 115.63 91.5303 117.091 94.1533V95H100.307ZM89.7979 84.043C91.8896 84.043 93.6162 83.5947 94.9775 82.6982C96.3721 81.8018 97.3682 80.7891 97.9658 79.6602V71.0439H93.085C87.2412 71.0439 84.3193 73.667 84.3193 78.9131C84.3193 80.4404 84.834 81.6855 85.8633 82.6484C86.8926 83.5781 88.2041 84.043 89.7979 84.043ZM174.167 68.4541C174.167 76.8213 172.274 83.5117 168.489 88.5254C164.737 93.5059 159.657 95.9961 153.249 95.9961C148.302 95.9961 144.234 94.1865 141.047 90.5674V115.719H124.263V41.1113H139.951L140.449 46.0918C143.67 42.1074 147.903 40.1152 153.149 40.1152C159.79 40.1152 164.953 42.5723 168.639 47.4863C172.324 52.3672 174.167 59.0908 174.167 67.6572V68.4541ZM157.383 67.4082C157.383 57.8457 154.594 53.0645 149.016 53.0645C145.031 53.0645 142.375 54.4922 141.047 57.3477V78.5645C142.508 81.5527 145.197 83.0469 149.115 83.0469C154.461 83.0469 157.217 78.4316 157.383 69.2012V67.4082ZM213.712 89.1729C210.159 93.7217 205.361 95.9961 199.318 95.9961C193.408 95.9961 188.926 94.2861 185.871 90.8662C182.85 87.4131 181.339 82.4658 181.339 76.0244V41.1113H198.123V76.124C198.123 80.7393 200.364 83.0469 204.847 83.0469C208.698 83.0469 211.438 81.6689 213.064 78.9131V41.1113H229.948V95H214.21L213.712 89.1729ZM267.401 79.8594C267.401 78.4316 266.654 77.2861 265.16 76.4229C263.666 75.5596 260.827 74.6631 256.644 73.7334C252.46 72.8037 249.007 71.5918 246.284 70.0977C243.562 68.5703 241.486 66.7275 240.059 64.5693C238.631 62.4111 237.917 59.9375 237.917 57.1484C237.917 52.2012 239.959 48.1338 244.043 44.9463C248.127 41.7256 253.473 40.1152 260.08 40.1152C267.186 40.1152 272.896 41.7256 277.213 44.9463C281.529 48.167 283.688 52.4004 283.688 57.6465H266.854C266.854 53.3301 264.579 51.1719 260.03 51.1719C258.271 51.1719 256.793 51.6699 255.598 52.666C254.402 53.6289 253.805 54.8408 253.805 56.3018C253.805 57.7959 254.535 59.0078 255.996 59.9375C257.457 60.8672 259.781 61.6309 262.969 62.2285C266.189 62.8262 269.012 63.54 271.436 64.3701C279.537 67.1592 283.588 72.1562 283.588 79.3613C283.588 84.2754 281.396 88.2764 277.014 91.3643C272.664 94.4521 267.02 95.9961 260.08 95.9961C255.465 95.9961 251.348 95.166 247.729 93.5059C244.109 91.8457 241.287 89.5879 239.262 86.7324C237.236 83.877 236.224 80.8721 236.224 77.7178H251.912C251.979 80.208 252.809 82.0342 254.402 83.1963C255.996 84.3252 258.038 84.8896 260.528 84.8896C262.819 84.8896 264.529 84.4248 265.658 83.4951C266.82 82.5654 267.401 81.3535 267.401 79.8594ZM311.03 27.7139V41.1113H319.896V52.7656H311.03V77.4189C311.03 79.4443 311.396 80.8555 312.126 81.6523C312.856 82.4492 314.301 82.8477 316.459 82.8477C318.119 82.8477 319.514 82.748 320.643 82.5488V94.5518C317.621 95.5146 314.467 95.9961 311.18 95.9961C305.402 95.9961 301.136 94.6348 298.38 91.9121C295.624 89.1895 294.246 85.0557 294.246 79.5107V52.7656H287.373V41.1113H294.246V27.7139H311.03ZM356.9 95C356.303 93.9043 355.771 92.2939 355.307 90.1689C352.219 94.0537 347.902 95.9961 342.357 95.9961C337.277 95.9961 332.961 94.4688 329.408 91.4141C325.855 88.3262 324.079 84.458 324.079 79.8096C324.079 73.9658 326.237 69.5498 330.554 66.5615C334.87 63.5732 341.146 62.0791 349.38 62.0791H354.56V59.2402C354.56 54.293 352.418 51.8193 348.135 51.8193C344.15 51.8193 342.158 53.7783 342.158 57.6963H325.374C325.374 52.4834 327.582 48.25 331.998 44.9961C336.447 41.7422 342.108 40.1152 348.981 40.1152C355.854 40.1152 361.283 41.792 365.268 45.1455C369.252 48.499 371.294 53.0977 371.394 58.9414V82.7979C371.46 87.7451 372.224 91.5303 373.685 94.1533V95H356.9ZM346.392 84.043C348.483 84.043 350.21 83.5947 351.571 82.6982C352.966 81.8018 353.962 80.7891 354.56 79.6602V71.0439H349.679C343.835 71.0439 340.913 73.667 340.913 78.9131C340.913 80.4404 341.428 81.6855 342.457 82.6484C343.486 83.5781 344.798 84.043 346.392 84.043Z\",\n    fill: \"black\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 257,\n    y: 28,\n    width: 8,\n    height: 13,\n    fill: \"black\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 257,\n    y: 95,\n    width: 8,\n    height: 13,\n    fill: \"black\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M78.9141 132.016C78.9141 131.573 78.7578 131.234 78.4453 131C78.1328 130.76 77.5703 130.51 76.7578 130.25C75.9453 129.984 75.3021 129.724 74.8281 129.469C73.5365 128.771 72.8906 127.831 72.8906 126.648C72.8906 126.034 73.0625 125.487 73.4062 125.008C73.7552 124.523 74.2526 124.146 74.8984 123.875C75.5495 123.604 76.2786 123.469 77.0859 123.469C77.8984 123.469 78.6224 123.617 79.2578 123.914C79.8932 124.206 80.3854 124.62 80.7344 125.156C81.0885 125.693 81.2656 126.302 81.2656 126.984H78.9219C78.9219 126.464 78.7578 126.06 78.4297 125.773C78.1016 125.482 77.6406 125.336 77.0469 125.336C76.474 125.336 76.0286 125.458 75.7109 125.703C75.3932 125.943 75.2344 126.26 75.2344 126.656C75.2344 127.026 75.4193 127.336 75.7891 127.586C76.1641 127.836 76.7135 128.07 77.4375 128.289C78.7708 128.69 79.7422 129.188 80.3516 129.781C80.9609 130.375 81.2656 131.115 81.2656 132C81.2656 132.984 80.8932 133.758 80.1484 134.32C79.4036 134.878 78.401 135.156 77.1406 135.156C76.2656 135.156 75.4688 134.997 74.75 134.68C74.0312 134.357 73.4818 133.917 73.1016 133.359C72.7266 132.802 72.5391 132.156 72.5391 131.422H74.8906C74.8906 132.677 75.6406 133.305 77.1406 133.305C77.6979 133.305 78.1328 133.193 78.4453 132.969C78.7578 132.74 78.9141 132.422 78.9141 132.016ZM88.8019 123.625L91.7238 131.875L94.63 123.625H97.7081V135H95.3566V131.891L95.5909 126.523L92.5206 135H90.9113L87.8488 126.531L88.0831 131.891V135H85.7394V123.625H88.8019ZM109.198 132.656H105.088L104.307 135H101.815L106.049 123.625H108.221L112.479 135H109.987L109.198 132.656ZM105.721 130.758H108.565L107.135 126.5L105.721 130.758ZM120.632 130.836H118.765V135H116.421V123.625H120.648C121.992 123.625 123.028 123.924 123.757 124.523C124.486 125.122 124.851 125.969 124.851 127.062C124.851 127.839 124.682 128.487 124.343 129.008C124.01 129.523 123.502 129.935 122.82 130.242L125.281 134.891V135H122.765L120.632 130.836ZM118.765 128.938H120.656C121.244 128.938 121.7 128.789 122.023 128.492C122.346 128.19 122.507 127.776 122.507 127.25C122.507 126.714 122.354 126.292 122.046 125.984C121.744 125.677 121.278 125.523 120.648 125.523H118.765V128.938ZM137.692 125.523H134.208V135H131.864V125.523H128.426V123.625H137.692V125.523ZM155.155 130.352H150.655V135H148.311V123.625H155.717V125.523H150.655V128.461H155.155V130.352ZM162.449 135H160.105V123.625H162.449V135ZM176.759 135H174.415L169.853 127.516V135H167.509V123.625H169.853L174.423 131.125V123.625H176.759V135ZM188.248 132.656H184.139L183.357 135H180.865L185.1 123.625H187.272L191.529 135H189.037L188.248 132.656ZM184.772 130.758H187.615L186.186 126.5L184.772 130.758ZM204.722 135H202.378L197.816 127.516V135H195.472V123.625H197.816L202.386 131.125V123.625H204.722V135ZM218.578 131.211C218.49 132.435 218.037 133.398 217.219 134.102C216.407 134.805 215.334 135.156 214 135.156C212.542 135.156 211.394 134.667 210.555 133.688C209.722 132.703 209.305 131.354 209.305 129.641V128.945C209.305 127.852 209.498 126.888 209.883 126.055C210.269 125.221 210.818 124.583 211.532 124.141C212.25 123.693 213.084 123.469 214.032 123.469C215.344 123.469 216.401 123.82 217.203 124.523C218.006 125.227 218.469 126.214 218.594 127.484H216.25C216.193 126.75 215.987 126.219 215.633 125.891C215.284 125.557 214.75 125.391 214.032 125.391C213.25 125.391 212.664 125.672 212.274 126.234C211.888 126.792 211.69 127.659 211.68 128.836V129.695C211.68 130.924 211.865 131.823 212.235 132.391C212.61 132.958 213.198 133.242 214 133.242C214.724 133.242 215.263 133.078 215.618 132.75C215.977 132.417 216.183 131.904 216.235 131.211H218.578ZM229.841 130.07H225.341V133.117H230.622V135H222.997V123.625H230.607V125.523H225.341V128.234H229.841V130.07Z\",\n    fill: \"#52555F\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgKaputaDesktop);\nexport default __webpack_public_path__ + \"static/media/Kapu$ta_desktop.558b646fc02fc6b4a209e561d24bd10e.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport bgDesk from '../../images/BgDesktopReg_1.png';\nimport bgDesk2 from '../../images/BgDesktopReg_2.png';\nimport bgTabl from '../../images/BgTablet_1.png';\nimport bgTabl2 from '../../images/BgTablet_2.png';\n\nexport const RegisterLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  flex-grow: 1;\n  padding-top: 84px;\n  padding-left: 20px;\n  padding-bottom: auto;\n  padding-right: 20px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n    padding-left: 170px;\n    padding-right: 170px;\n    background-image: url(${bgDesk}), url(${bgTabl});\n    background-position: top 30px right 0px, bottom 55px left 100px;\n    background-repeat: no-repeat;\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      (-webkit-min-device-pixel-ratio: 2),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${bgDesk2}), url(${bgTabl2});\n    }\n  }\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n    justify-content: right;\n    align-items: center;\n    padding-top: 115px;\n    padding-left: 90px;\n    padding-bottom: 125px;\n    padding-right: 170px;\n    background-position: top 30px right 0px, bottom 50px left 100px;\n  }\n`;\n\nexport const RegisterImgBox = styled.div`\n  display: flex;\n`;\n","import Background from '../../components/Background/Background';\nimport LoginForm from '../../components/LoginForm/LoginForm';\nimport logoMobile from '../../images/Kapu$ta_mobile.svg';\nimport logoTablet from '../../images/Kapu$ta_tablet.svg';\nimport logoDesktop from '../../images/Kapu$ta_desktop.svg';\nimport { RegisterLayout, RegisterImgBox } from './Register.styled';\nimport { useMediaRules } from '../../MediaRules/MediaRules';\n\nexport default function Register() {\n  const { isMobile, isDesktop, isTablet } = useMediaRules();\n  return (\n    <>\n      <Background />\n      <RegisterLayout>\n        {isMobile && (\n          <RegisterImgBox>\n            <img\n              src={logoMobile}\n              alt=\"logo\"\n              className={`animate__animated animate__fadeInLeft`}\n            />\n          </RegisterImgBox>\n        )}\n        {isTablet && (\n          <RegisterImgBox>\n            <img\n              src={logoTablet}\n              alt=\"logo\"\n              className={`animate__animated animate__fadeInLeft`}\n            />\n          </RegisterImgBox>\n        )}\n        {isDesktop && (\n          <RegisterImgBox>\n            <img\n              src={logoDesktop}\n              alt=\"logo\"\n              className={`animate__animated animate__fadeInLeft`}\n            />\n          </RegisterImgBox>\n        )}\n        <LoginForm />\n      </RegisterLayout>\n    </>\n  );\n}\n"],"names":["StyledBackground","styled","FormLayout","Form","LoginLabel","LoginInput","LoginBtnBlock","LoginBtn","GoogleBtn","ErrorText","dispatch","useDispatch","emailID","shortid","passwordlID","type","href","src","google","alt","initialValues","email","password","validate","values","errors","test","onSubmit","logIn","touched","handleChange","handleBlur","handleSubmit","isSubmitting","htmlFor","name","onChange","onBlur","value","id","placeholder","pattern","disabled","toUpperCase","onClick","signUp","RegisterLayout","bgDesk","bgTabl","bgDesk2","bgTabl2","RegisterImgBox","Register","useMediaRules","isMobile","isDesktop","isTablet","Background","logoMobile","className","logoTablet","logoDesktop"],"sourceRoot":""}